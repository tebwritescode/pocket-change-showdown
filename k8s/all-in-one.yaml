---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: pocket-change-showdown

---
# Secret for Flask
apiVersion: v1
kind: Secret
metadata:
  name: pcs-secret
  namespace: pocket-change-showdown
type: Opaque
stringData:
  secret-key: pcs-showdown-secret-key-2025

---
# PersistentVolumeClaim for data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pcs-data-pvc
  namespace: pocket-change-showdown
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: ssd

---
# PersistentVolumeClaim for uploads
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pcs-uploads-pvc
  namespace: pocket-change-showdown
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: ssd

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pocket-change-showdown
  namespace: pocket-change-showdown
  labels:
    app: pocket-change-showdown
    version: v2.0.0
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: pocket-change-showdown
  template:
    metadata:
      labels:
        app: pocket-change-showdown
        version: v2.1.0
    spec:
      containers:
      - name: pcs-tracker
        image: tebwritescode/pcs-tracker:v2.1.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5001
          name: http
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: pcs-secret
              key: secret-key
              optional: true
        - name: FLASK_ENV
          value: "production"
        volumeMounts:
        - name: data
          mountPath: /app/data
        - name: uploads
          mountPath: /app/uploads
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 5001
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 5001
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: pcs-data-pvc
      - name: uploads
        persistentVolumeClaim:
          claimName: pcs-uploads-pvc
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: pocket-change-showdown-service
  namespace: pocket-change-showdown
  labels:
    app: pocket-change-showdown
spec:
  type: ClusterIP
  selector:
    app: pocket-change-showdown
  ports:
    - port: 80
      targetPort: 5001
      protocol: TCP
      name: http

---
# Ingress (optional - configure your domain)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pocket-change-showdown-ingress
  namespace: pocket-change-showdown
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    # Uncomment for SSL with cert-manager
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  ingressClassName: nginx
  rules:
  - host: pcs.example.com  # Change to your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: pocket-change-showdown-service
            port:
              number: 80
  # Uncomment for SSL
  # tls:
  # - hosts:
  #   - pcs.example.com
  #   secretName: pcs-tls-secret

---
# Service for NodePort access (alternative to Ingress)
apiVersion: v1
kind: Service
metadata:
  name: pocket-change-showdown-nodeport
  namespace: pocket-change-showdown
  labels:
    app: pocket-change-showdown
spec:
  type: NodePort
  selector:
    app: pocket-change-showdown
  ports:
    - port: 5001
      targetPort: 5001
      nodePort: 30501  # Access via <node-ip>:30501
      protocol: TCP
      name: http